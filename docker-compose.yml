services:
  pretalx:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes: 
      - pretalx_data:/data
      - pretalx_public_data:/public
    environment:
      # App
      - PRETALX_SITE_NAME=${PRETALX_SITE_NAME}
      - PRETALX_SITE_URL=${PRETALX_SITE_URL}
      - PRETALX_CONFIG_FILE=/dev/null
      - PRETALX_DEBUG=True
      # Database
      - PRETALX_DB_TYPE=postgresql
      - PRETALX_DB_HOST=pretalx_postgres
      - PRETALX_DB_PORT=5432
      - PRETALX_DB_NAME=${POSTGRES_DB}
      - PRETALX_DB_USER=${POSTGRES_USER}
      - PRETALX_DB_PASS=${POSTGRES_PASSWORD}
      # Cache
      - PRETALX_REDIS=redis://:${REDIS_PASSWORD}@pretalx_redis:6379/1
    depends_on:
      pretalx_postgres:
        condition: service_healthy
      pretalx_redis:
        condition: service_healthy

  pretalx_postgres:
    image: postgres:17
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: unless-stopped
    volumes:
      - pretalx_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pretalx_redis:
    image: redis:latest
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes: 
      - pretalx_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  pretalx_data:
  pretalx_public_data:
  pretalx_postgres_data:
  pretalx_redis_data:
